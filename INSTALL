Requirements:
==============

    * Python >= 2.5
    * Django >= 1.0.2


Instructions:
=============

1) Install rsscloud_feeds app in your python path.


2) Add to your settings.py:

    I) Add to rsscloud_feeds to your installed apps:

    INSTALLED_APPS = (
        ...
        "rsscloud_feeds",
        ...
    )


    II) Choose a REST rssCloud server and configure the following variables:
            
        # Using rssNimbus server...
        RSSCLOUD_URL = "rssnimbus.appspot.com"
        RSSCLOUD_PORT = "80" 
        RSSCLOUD_PATH = "/pleaseNotify"
        # Method and registerProcedure are not configurable:
        #   method is alwais "http-post" for REST implementations.
        #   registerProcedure is alwais empty.

        # complete url where your blog will send update notifications
        # to the rssCloud server using POST method
        RSSCLOUD_PING_URL = "http://rssnimbus.appspot.com/ping/"
        RSSCLOUD_PING_RETRY_COUNT = 3
        # Choose True if rsscloud_feeds app must do an instantaneous ping
        # each time you create/update a new post. False otherwise.
        RSSCLOUD_INSTANT_PING = True

        # complete url of your feed
        RSSCLOUD_FEED_URL = "http://www.matagus.com.ar/feeds/all/"


3) Register the model classes that will trigger the ping notification when get saved:

    # maybe in your models.py after your model class:
    import rsscloud_feeds
    rsscloud_feeds.register(MyPostModelClass)


4) Find your Feed class and make it inherit from rsscloud_feeds.feeds.CloudEnabledRss20Feed:

    # in your feeds.py file:
    from django.contrib.syndication.feeds import Feed
    from rsscloud_feeds.feeds import CloudEnabledRss20Feed
    
    class MyBlogFeed(Feed):
        feed_type = CloudEnabledRss20Feed
        ...
        ...

5) Restart your webserver and check your feed. It will have a <cloud> tag.


6) Finally create a cron entry to run ./manage.py rsscloud_notify_update

        